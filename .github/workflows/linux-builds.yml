name: Build on Linux (Docker)

on:
  push:
    branches:
      - master
    paths-ignore:
      - '**.md'
  pull_request:
    branches:
      - master
    paths-ignore:
      - '**.md'
  release:
    types:
      - published

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        distro: # these names correspond to the files in .ci/$distro
          - UbuntuGroovy
          - UbuntuFocal
          - UbuntuBionic
          - ArchLinux
          - DebianBuster
          - Fedora33
        include:
          - distro: UbuntuGroovy
            package: DEB

          - distro: UbuntuFocal
            package: DEB
            test: skip # UbuntuFocal has a broken qt for debug builds

          - distro: UbuntuBionic
            package: DEB

          - distro: ArchLinux
            package: skip # we are packaged in arch already
            allow-failure: yes

          - distro: DebianBuster
            package: DEB

          - distro: Fedora33
            package: RPM
            test: skip # Fedora is our slowest build

    runs-on: ubuntu-latest

    continue-on-error: ${{matrix.allow-failure == 'yes'}}

    env:
      NAME: ${{matrix.distro}}
      CACHE: /tmp/${{matrix.distro}}-cache # ${{runner.temp}} does not work?

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get cache timestamp
        id: cache_timestamp
        shell: bash
        run: echo "::set-output name=timestamp::$(date -u '+%Y%m%d%H%M%S')"

      - name: Restore cache
        uses: actions/cache@v2
        env:
          timestamp: ${{steps.cache_timestamp.outputs.timestamp}}
        with:
          path: ${{env.CACHE}}
          key: docker-${{matrix.distro}}-cache-${{env.timestamp}}
          restore-keys: |
            docker-${{matrix.distro}}-cache-

      - name: Build ${{matrix.distro}} Docker image
        shell: bash
        run: source .ci/docker.sh --build

      - name: Build debug and test
        if: matrix.test != 'skip'
        shell: bash
        run: |
          source .ci/docker.sh
          RUN --server --debug --test

      - name: Build release package
        if: matrix.package != 'skip'
        shell: bash
        run: |
          source .ci/docker.sh
          RUN --server --release --package ${{matrix.package}}

      - name: Rename output file and get upload URL
        if: matrix.package != 'skip'
        id: name
        shell: bash
        run: |
          # artifacts built on docker are made by a different user
          sudo chmod 777 build/Cockatrice-*
          ./.ci/name_build.sh "-${{matrix.distro}}"

      - name: Upload artifacts
        if: matrix.package != 'skip'
        uses: actions/upload-artifact@v2
        with:
          name: ${{matrix.distro}}-package
          path: ${{steps.name.outputs.file}}

      - name: Upload release ${{steps.name.outputs.name}}
        if: steps.name.outputs.upload_url != null
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          upload_url: ${{steps.name.outputs.upload_url}}
          asset_path: ${{steps.name.outputs.file}}
          asset_name: ${{steps.name.outputs.name}}
          asset_content_type: binary_package # required but arbitrary
